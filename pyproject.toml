[tool.poetry]
name = "json-prettify"
version = "0.1.0"
description = "A powerful Python CLI tool for pretty-printing JSON with syntax highlighting, validation, and statistics"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/yourusername/json-prettify"
repository = "https://github.com/yourusername/json-prettify"
documentation = "https://github.com/yourusername/json-prettify#readme"
keywords = ["json", "pretty-print", "cli", "formatter", "syntax-highlighting", "validation", "terminal"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Utilities",
]
packages = [{include = "json_prettify", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
click = "^8.1.7"
rich = "^13.7.0"
pygments = "^2.17.2"
jsonschema = "^4.20.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
black = "^23.12.1"
ruff = "^0.1.11"
mypy = "^1.8.0"
pytest-cov = "^4.1.0"

[tool.poetry.scripts]
json-prettify = "json_prettify.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = []
fixable = ["ALL"]
unfixable = []
line-length = 88
target-version = "py39"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=json_prettify --cov-report=term-missing"
testpaths = [
    "tests",
]
python_files = "test_*.py"

[tool.coverage.run]
source = ["src/json_prettify"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]